{"version":3,"sources":["edit-screen.js"],"names":["$","document","ready","change","$city","prev","attr","next","this","val","trigger","tokenInput","TaroGeo","token","tokenLimit","preventDuplicates","searchDelay","bind","id","name","parseInt","click","e","preventDefault","get","zip","done","address","prefecture","hit","each","index","opt","text","city","street","setMap","latLng","center","lat","lng","marker","map","setCenter","panTo","updatePosition","$mapContainer","length","reg","test","parseFloat","google","maps","Map","LatLng","zoom","minZoom","mapTypeId","MapTypeId","ROADMAP","zoomControlOptions","position","ControlPosition","LEFT_CENTER","Marker","draggable","animation","Animation","DROP","event","addListener","geocoder","Geocoder","pref","replace","join","geocode","results","status","GeocoderStatus","OK","setPosition","geometry","location","alert","jQuery"],"mappings":"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","file":"../edit-screen.js","sourcesContent":["/**\n * Description\n */\n\n/*global google: true*/\n/*global TaroGeo: true*/\n\n(function ($) {\n    'use strict';\n\n    $(document).ready(function(){\n\n        // Sync prefecture ID\n        $('#prefecture', '#taro-geo-taxonomy-box').change(function(){\n            var $city = $('#city', '#taro-geo-taxonomy-box'),\n                prev = $city.attr('data-prefecture'),\n                next = $(this).val();\n            $city.attr('data-prefecture', next);\n            if( prev != next ){\n                $city.trigger('clear.geo.taro');\n            }\n        });\n\n        // Token input\n        var $city = $('#city', '#taro-geo-taxonomy-box');\n\n        $city.tokenInput(function(){\n            return TaroGeo.token + \"&term_id=\" + $('#city').attr('data-prefecture');\n        }, {\n            tokenLimit: 1,\n            preventDuplicates: true,\n            searchDelay: 500\n        });\n\n        $city.bind('clear.geo.taro', function(){\n            $(this).tokenInput('clear');\n        });\n\n        // Fil token if possible\n        var id = $city.attr('data-id'),\n            name = $city.attr('data-name');\n        if( id && name ){\n            $city.tokenInput('add', {\n                id: parseInt(id, 10),\n                name: name\n            });\n        }\n\n        // Zip search\n        $('.taro-zip-search').click(function(e){\n            e.preventDefault();\n            $.get( TaroGeo.zip, {\n                zip: $('#zip').val()\n            } ).done( function(address){\n                if( address.prefecture ){\n                    var hit = false;\n                    $('option', '#prefecture').each(function(index, opt){\n                        if( $(opt).text() === address.prefecture ){\n                            $(opt).attr('selected', true);\n                            hit = true;\n                        }\n                    });\n                    if( hit ){\n                        $('#prefecture').trigger('change');\n                    }\n                }\n                if( address.city ){\n                    $city.tokenInput('add', address.city);\n                }\n                if( address.street ){\n                    $('#street').val( address.street );\n                }\n            } );\n        });\n\n        // Google Map\n        (function(){\n            var center = {\n                    lat: 35.686573,\n                    lng: 139.742216\n                }, map, marker,\n                $mapContainer = $('#taro-gmap-container');\n\n            function setMap(latLng){\n                center.lat = latLng.lat();\n                center.lng = latLng.lng();\n                marker.map.setCenter(latLng);\n                marker.map.panTo(latLng);\n            }\n\n            function updatePosition(latLng){\n                $('#lat').val(latLng.lat());\n                $('#lng').val(latLng.lng());\n            }\n\n            if( $mapContainer.length ){\n\n                // Cet center if exists\n                var lat = $('#lat').val(),\n                    lng = $('#lng').val(),\n                    reg = /^[0-9\\.]+$/;\n                if( reg.test(lat) && reg.test(lng) ){\n                    center.lat = parseFloat(lat);\n                    center.lng = parseFloat(lng);\n                }\n\n                // Initialize map\n                map = new google.maps.Map($mapContainer.get(0), {\n                    center: new google.maps.LatLng(center.lat, center.lng),\n                    zoom: 15,\n                    minZoom: 11,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    zoomControlOptions: {\n                        position: google.maps.ControlPosition.LEFT_CENTER\n                    }\n                });\n\n                // drop marker\n                marker = new google.maps.Marker({\n                    position: new google.maps.LatLng(center.lat, center.lng),\n                    map: map,\n                    draggable:true,\n                    animation: google.maps.Animation.DROP\n                });\n\n                // sync lat lng\n                google.maps.event.addListener(marker, 'dragend', function(){\n                    setMap(this.position);\n                    updatePosition(this.position);\n                });\n                google.maps.event.addListener(marker, 'drag', function(){\n                    updatePosition(this.position);\n                });\n\n                // Clear address\n                $('#taro-geo-clearer').click(function(e){\n                    e.preventDefault();\n                    $('#lat').val('');\n                    $('#lng').val('');\n                });\n\n                // Search Address\n                var geocoder = new google.maps.Geocoder();\n                $('#taro-geo-searcher').click(function(e){\n                    e.preventDefault();\n                    var pref = $('#prefecture option:selected').text(),\n                        city = $('#city').tokenInput('get'),\n                        street = $('#street').val();\n                    if( pref.length && city.length && street.length ){\n                        var address = [pref, city[0].name.replace(/（.*）/, ''), street].join(' ');\n                        geocoder.geocode( {\n                            address: address\n                        }, function(results, status) {\n                            if ( status == google.maps.GeocoderStatus.OK ) {\n                                marker.setPosition(results[0].geometry.location);\n                                setMap(results[0].geometry.location);\n                                updatePosition(results[0].geometry.location);\n                            } else {\n                                alert(\"住所が見つかりません: \" + status);\n                            }\n                        });\n                    }else{\n                        alert('住所が入力されていません');\n                    }\n                });\n            }\n\n        })();\n    });\n\n\n\n\n})(jQuery);\n"]}